[{"/Users/moira/Projects/react-app-boilerplate/src/assets/icons.js":"1","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/App/App.js":"2","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/App/App.styles.js":"3","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/App/App.test.js":"4","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/App/index.js":"5","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/AuthenticatedApp/AuthenticatedApp.js":"6","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/AuthenticatedApp/AuthenticatedApp.test.js":"7","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/AuthenticatedApp/index.js":"8","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/ErrorBoundary/ErrorBoundary.js":"9","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/ErrorBoundary/ErrorBoundary.styles.js":"10","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/ErrorBoundary/ErrorBoundary.test.js":"11","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/ErrorBoundary/index.js":"12","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Footer/Footer.js":"13","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Footer/index.js":"14","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/Button.js":"15","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/Form.js":"16","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/Form.styles.js":"17","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/Input.js":"18","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/InputLabel.js":"19","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/Select.js":"20","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/index.js":"21","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Home/Home.js":"22","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Home/Home.styles.js":"23","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Home/Home.test.js":"24","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Home/index.js":"25","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/LanguageSelector/LanguageSelector.js":"26","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/LanguageSelector/LanguageSelector.styles.js":"27","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/LanguageSelector/LanguageSelector.test.js":"28","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/LanguageSelector/index.js":"29","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Loading/Loading.js":"30","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Loading/Loading.styles.js":"31","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Loading/index.js":"32","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/Button.js":"33","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/Logo.js":"34","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/Menu.js":"35","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/NavBar.styles.js":"36","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/NavBar.test.js":"37","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/Navbar.js":"38","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/UserOptions.js":"39","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/index.js":"40","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/NoMatch/NoMatch.js":"41","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/NoMatch/NoMatch.styles.js":"42","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/NoMatch/NoMatch.test.js":"43","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/NoMatch/index.js":"44","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Settings/ChangePasswordForm.js":"45","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Settings/Form.js":"46","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Settings/Settings.js":"47","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Settings/Settings.styles.js":"48","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Settings/Settings.test.js":"49","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Settings/index.js":"50","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/UnauthenticatedApp/UnauthenticatedApp.js":"51","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/UnauthenticatedApp/UnauthenticatedApp.test.js":"52","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/UnauthenticatedApp/index.js":"53","/Users/moira/Projects/react-app-boilerplate/src/features/app/hooks/events.js":"54","/Users/moira/Projects/react-app-boilerplate/src/features/app/hooks/locale.js":"55","/Users/moira/Projects/react-app-boilerplate/src/features/app/index.js":"56","/Users/moira/Projects/react-app-boilerplate/src/features/app/layouts/MainLayout/MainLayout.js":"57","/Users/moira/Projects/react-app-boilerplate/src/features/app/layouts/MainLayout/MainLayout.styles.js":"58","/Users/moira/Projects/react-app-boilerplate/src/features/app/layouts/MainLayout/index.js":"59","/Users/moira/Projects/react-app-boilerplate/src/features/app/locales/entries/en-US.js":"60","/Users/moira/Projects/react-app-boilerplate/src/features/app/locales/entries/es-ES.js":"61","/Users/moira/Projects/react-app-boilerplate/src/features/app/locales/index.js":"62","/Users/moira/Projects/react-app-boilerplate/src/features/app/locales/messages/en-US.js":"63","/Users/moira/Projects/react-app-boilerplate/src/features/app/locales/messages/es-ES.js":"64","/Users/moira/Projects/react-app-boilerplate/src/features/app/pages/HomePage.js":"65","/Users/moira/Projects/react-app-boilerplate/src/features/app/pages/NoMatchPage.js":"66","/Users/moira/Projects/react-app-boilerplate/src/features/app/pages/SettingsPage.js":"67","/Users/moira/Projects/react-app-boilerplate/src/features/auth/actions.js":"68","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/AuthWrapper/AuthWrapper.js":"69","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/AuthWrapper/AuthWrapper.styles.js":"70","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/AuthWrapper/AuthWrapper.test.js":"71","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/AuthWrapper/index.js":"72","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/EmailForm.js":"73","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/ForgotPassword.js":"74","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/ForgotPassword.styles.js":"75","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/ForgotPassword.test.js":"76","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/PasswordForm.js":"77","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/TokenForm.js":"78","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/index.js":"79","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignIn/Form.js":"80","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignIn/SignIn.js":"81","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignIn/SignIn.test.js":"82","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignIn/index.js":"83","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignUp/Form.js":"84","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignUp/SignUp.js":"85","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignUp/SignUp.test.js":"86","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignUp/index.js":"87","/Users/moira/Projects/react-app-boilerplate/src/features/auth/hooks/auth.js":"88","/Users/moira/Projects/react-app-boilerplate/src/features/auth/index.js":"89","/Users/moira/Projects/react-app-boilerplate/src/features/auth/layouts/AuthLayout/AuthLayout.js":"90","/Users/moira/Projects/react-app-boilerplate/src/features/auth/layouts/AuthLayout/AuthLayout.styles.js":"91","/Users/moira/Projects/react-app-boilerplate/src/features/auth/layouts/AuthLayout/index.js":"92","/Users/moira/Projects/react-app-boilerplate/src/features/auth/pages/ForgotPasswordPage.js":"93","/Users/moira/Projects/react-app-boilerplate/src/features/auth/pages/SignInPage.js":"94","/Users/moira/Projects/react-app-boilerplate/src/features/auth/pages/SignUpPage.js":"95","/Users/moira/Projects/react-app-boilerplate/src/features/auth/pages/index.js":"96","/Users/moira/Projects/react-app-boilerplate/src/features/auth/reducer.js":"97","/Users/moira/Projects/react-app-boilerplate/src/features/auth/services/AuthService.js":"98","/Users/moira/Projects/react-app-boilerplate/src/features/auth/services/httpClient.js":"99","/Users/moira/Projects/react-app-boilerplate/src/features/auth/services/middlewares/auth.js":"100","/Users/moira/Projects/react-app-boilerplate/src/features/auth/types.js":"101","/Users/moira/Projects/react-app-boilerplate/src/helpers/decamelize.js":"102","/Users/moira/Projects/react-app-boilerplate/src/helpers/decamelize.test.js":"103","/Users/moira/Projects/react-app-boilerplate/src/helpers/errors.js":"104","/Users/moira/Projects/react-app-boilerplate/src/helpers/string.js":"105","/Users/moira/Projects/react-app-boilerplate/src/index.js":"106","/Users/moira/Projects/react-app-boilerplate/src/index.test.js":"107","/Users/moira/Projects/react-app-boilerplate/src/setupTests.js":"108","/Users/moira/Projects/react-app-boilerplate/src/store/createReducer.js":"109","/Users/moira/Projects/react-app-boilerplate/src/store/index.js":"110","/Users/moira/Projects/react-app-boilerplate/src/store/rootReducer.js":"111","/Users/moira/Projects/react-app-boilerplate/src/testUtils/fieldHelpers.js":"112","/Users/moira/Projects/react-app-boilerplate/src/testUtils/index.js":"113","/Users/moira/Projects/react-app-boilerplate/src/testUtils/mocks/auth.js":"114","/Users/moira/Projects/react-app-boilerplate/src/testUtils/mocks/base.js":"115","/Users/moira/Projects/react-app-boilerplate/src/theme.js":"116"},{"size":86,"mtime":1587046023024,"results":"117","hashOfConfig":"118"},{"size":1367,"mtime":1610629070447,"results":"119","hashOfConfig":"118"},{"size":4266,"mtime":1607624477370,"results":"120","hashOfConfig":"118"},{"size":214,"mtime":1607624477371,"results":"121","hashOfConfig":"118"},{"size":33,"mtime":1607624477371,"results":"122","hashOfConfig":"118"},{"size":498,"mtime":1607624477371,"results":"123","hashOfConfig":"118"},{"size":1071,"mtime":1607624477372,"results":"124","hashOfConfig":"118"},{"size":85,"mtime":1607624477372,"results":"125","hashOfConfig":"118"},{"size":1507,"mtime":1607624477372,"results":"126","hashOfConfig":"118"},{"size":1037,"mtime":1607624477373,"results":"127","hashOfConfig":"118"},{"size":1460,"mtime":1607624477373,"results":"128","hashOfConfig":"118"},{"size":79,"mtime":1607624477373,"results":"129","hashOfConfig":"118"},{"size":200,"mtime":1607624477374,"results":"130","hashOfConfig":"118"},{"size":65,"mtime":1607624477374,"results":"131","hashOfConfig":"118"},{"size":720,"mtime":1607624477374,"results":"132","hashOfConfig":"118"},{"size":1016,"mtime":1607624477374,"results":"133","hashOfConfig":"118"},{"size":3150,"mtime":1607624477374,"results":"134","hashOfConfig":"118"},{"size":1117,"mtime":1607624477375,"results":"135","hashOfConfig":"118"},{"size":838,"mtime":1607624477375,"results":"136","hashOfConfig":"118"},{"size":1693,"mtime":1607624477375,"results":"137","hashOfConfig":"118"},{"size":61,"mtime":1607624477375,"results":"138","hashOfConfig":"118"},{"size":652,"mtime":1607624477376,"results":"139","hashOfConfig":"118"},{"size":384,"mtime":1607624477376,"results":"140","hashOfConfig":"118"},{"size":322,"mtime":1607624477376,"results":"141","hashOfConfig":"118"},{"size":61,"mtime":1607624477376,"results":"142","hashOfConfig":"118"},{"size":821,"mtime":1607624477377,"results":"143","hashOfConfig":"118"},{"size":193,"mtime":1607624477377,"results":"144","hashOfConfig":"118"},{"size":794,"mtime":1607624477378,"results":"145","hashOfConfig":"118"},{"size":85,"mtime":1607624477383,"results":"146","hashOfConfig":"118"},{"size":478,"mtime":1607624477384,"results":"147","hashOfConfig":"118"},{"size":839,"mtime":1607624477384,"results":"148","hashOfConfig":"118"},{"size":67,"mtime":1607624477385,"results":"149","hashOfConfig":"118"},{"size":439,"mtime":1607624477385,"results":"150","hashOfConfig":"118"},{"size":279,"mtime":1607624477386,"results":"151","hashOfConfig":"118"},{"size":1396,"mtime":1607624477386,"results":"152","hashOfConfig":"118"},{"size":3580,"mtime":1607624477386,"results":"153","hashOfConfig":"118"},{"size":1810,"mtime":1607624477386,"results":"154","hashOfConfig":"118"},{"size":375,"mtime":1607624477387,"results":"155","hashOfConfig":"118"},{"size":1856,"mtime":1607624477387,"results":"156","hashOfConfig":"118"},{"size":65,"mtime":1607624477388,"results":"157","hashOfConfig":"118"},{"size":580,"mtime":1607624477388,"results":"158","hashOfConfig":"118"},{"size":1149,"mtime":1607624477388,"results":"159","hashOfConfig":"118"},{"size":544,"mtime":1607624477389,"results":"160","hashOfConfig":"118"},{"size":67,"mtime":1607624477389,"results":"161","hashOfConfig":"118"},{"size":2184,"mtime":1607624477389,"results":"162","hashOfConfig":"118"},{"size":2219,"mtime":1607624477389,"results":"163","hashOfConfig":"118"},{"size":646,"mtime":1607624477390,"results":"164","hashOfConfig":"118"},{"size":1118,"mtime":1607624477390,"results":"165","hashOfConfig":"118"},{"size":6854,"mtime":1607624477390,"results":"166","hashOfConfig":"118"},{"size":69,"mtime":1607624477390,"results":"167","hashOfConfig":"118"},{"size":501,"mtime":1607624477391,"results":"168","hashOfConfig":"118"},{"size":1178,"mtime":1607624477391,"results":"169","hashOfConfig":"118"},{"size":89,"mtime":1607624477391,"results":"170","hashOfConfig":"118"},{"size":821,"mtime":1607624477392,"results":"171","hashOfConfig":"118"},{"size":156,"mtime":1607624477392,"results":"172","hashOfConfig":"118"},{"size":108,"mtime":1607624477392,"results":"173","hashOfConfig":"118"},{"size":539,"mtime":1607624477393,"results":"174","hashOfConfig":"118"},{"size":282,"mtime":1607624477393,"results":"175","hashOfConfig":"118"},{"size":70,"mtime":1607624477393,"results":"176","hashOfConfig":"118"},{"size":166,"mtime":1607624477393,"results":"177","hashOfConfig":"118"},{"size":166,"mtime":1607624477394,"results":"178","hashOfConfig":"118"},{"size":2265,"mtime":1607624477394,"results":"179","hashOfConfig":"118"},{"size":1882,"mtime":1607624477394,"results":"180","hashOfConfig":"118"},{"size":1998,"mtime":1607624477395,"results":"181","hashOfConfig":"118"},{"size":234,"mtime":1607624477395,"results":"182","hashOfConfig":"118"},{"size":258,"mtime":1607624477395,"results":"183","hashOfConfig":"118"},{"size":254,"mtime":1607624477395,"results":"184","hashOfConfig":"118"},{"size":864,"mtime":1607624477396,"results":"185","hashOfConfig":"118"},{"size":789,"mtime":1607624477396,"results":"186","hashOfConfig":"118"},{"size":1275,"mtime":1607624477397,"results":"187","hashOfConfig":"118"},{"size":1181,"mtime":1607624477397,"results":"188","hashOfConfig":"118"},{"size":76,"mtime":1607624477397,"results":"189","hashOfConfig":"118"},{"size":1852,"mtime":1607624477397,"results":"190","hashOfConfig":"118"},{"size":1345,"mtime":1607624477398,"results":"191","hashOfConfig":"118"},{"size":427,"mtime":1607624477398,"results":"192","hashOfConfig":"118"},{"size":6138,"mtime":1607624477398,"results":"193","hashOfConfig":"118"},{"size":2110,"mtime":1607624477398,"results":"194","hashOfConfig":"118"},{"size":2149,"mtime":1607624477398,"results":"195","hashOfConfig":"118"},{"size":82,"mtime":1607624477399,"results":"196","hashOfConfig":"118"},{"size":1759,"mtime":1607624477399,"results":"197","hashOfConfig":"118"},{"size":793,"mtime":1607624477399,"results":"198","hashOfConfig":"118"},{"size":2220,"mtime":1607624477400,"results":"199","hashOfConfig":"118"},{"size":66,"mtime":1607624477400,"results":"200","hashOfConfig":"118"},{"size":1849,"mtime":1607624477400,"results":"201","hashOfConfig":"118"},{"size":790,"mtime":1607624477402,"results":"202","hashOfConfig":"118"},{"size":2748,"mtime":1607624477406,"results":"203","hashOfConfig":"118"},{"size":66,"mtime":1607624477406,"results":"204","hashOfConfig":"118"},{"size":216,"mtime":1607624477406,"results":"205","hashOfConfig":"118"},{"size":156,"mtime":1607624477407,"results":"206","hashOfConfig":"118"},{"size":577,"mtime":1607624477407,"results":"207","hashOfConfig":"118"},{"size":282,"mtime":1607624477407,"results":"208","hashOfConfig":"118"},{"size":40,"mtime":1607624477411,"results":"209","hashOfConfig":"118"},{"size":274,"mtime":1607624477412,"results":"210","hashOfConfig":"118"},{"size":233,"mtime":1607624477412,"results":"211","hashOfConfig":"118"},{"size":233,"mtime":1607624477413,"results":"212","hashOfConfig":"118"},{"size":189,"mtime":1607624477413,"results":"213","hashOfConfig":"118"},{"size":1517,"mtime":1607624477413,"results":"214","hashOfConfig":"118"},{"size":845,"mtime":1607624477414,"results":"215","hashOfConfig":"118"},{"size":426,"mtime":1607624477414,"results":"216","hashOfConfig":"118"},{"size":754,"mtime":1607624477418,"results":"217","hashOfConfig":"118"},{"size":268,"mtime":1607624477419,"results":"218","hashOfConfig":"118"},{"size":799,"mtime":1592396572208,"results":"219","hashOfConfig":"118"},{"size":872,"mtime":1603112790978,"results":"220","hashOfConfig":"118"},{"size":445,"mtime":1604520593189,"results":"221","hashOfConfig":"118"},{"size":115,"mtime":1595429440988,"results":"222","hashOfConfig":"118"},{"size":986,"mtime":1607624477419,"results":"223","hashOfConfig":"118"},{"size":1118,"mtime":1607624477420,"results":"224","hashOfConfig":"118"},{"size":302,"mtime":1607624477420,"results":"225","hashOfConfig":"118"},{"size":328,"mtime":1607624477421,"results":"226","hashOfConfig":"118"},{"size":695,"mtime":1607624477421,"results":"227","hashOfConfig":"118"},{"size":134,"mtime":1607624477422,"results":"228","hashOfConfig":"118"},{"size":151,"mtime":1581631737482,"results":"229","hashOfConfig":"118"},{"size":1655,"mtime":1607624477422,"results":"230","hashOfConfig":"118"},{"size":3266,"mtime":1604520593194,"results":"231","hashOfConfig":"118"},{"size":78,"mtime":1595354208740,"results":"232","hashOfConfig":"118"},{"size":1522,"mtime":1603112790986,"results":"233","hashOfConfig":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},"1axkzh9",{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/moira/Projects/react-app-boilerplate/src/assets/icons.js",["522"],"import { faBars } from '@fortawesome/free-solid-svg-icons';\n\nexport default [faBars];\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/App/App.js",["523"],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/App/App.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/App/App.test.js",["524"],"import React from 'react';\n\nimport { render } from 'testUtils';\nimport App from 'features/app/components/App';\n\ndescribe('App', () => {\n  it('should render without crashing', () => {\n    render(<App />);\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/App/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/AuthenticatedApp/AuthenticatedApp.js",["525"],"import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport HomePage from '../../pages/HomePage';\nimport NoMatchPage from '../../pages/NoMatchPage';\nimport SettingsPage from '../../pages/SettingsPage';\n\nconst AuthenticatedApp = () => (\n  <Switch>\n    <Route path=\"/\" exact>\n      <HomePage />\n    </Route>\n    <Route path=\"/settings\" exact>\n      <SettingsPage />\n    </Route>\n    <Route>\n      <NoMatchPage />\n    </Route>\n  </Switch>\n);\n\nexport default AuthenticatedApp;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/AuthenticatedApp/AuthenticatedApp.test.js",["526"],"import React from 'react';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport { renderWithRouter } from 'testUtils';\nimport { userData, authenticationHeaders } from 'testUtils/mocks/auth';\nimport AuthenticatedApp from 'features/app/components/AuthenticatedApp/index';\n\nconst state = {\n  auth: {\n    user: userData,\n    session: authenticationHeaders,\n  },\n};\n\ndescribe('Authenticated App', () => {\n  it('renders the Home Page', () => {\n    const { getByText } = renderWithRouter(<AuthenticatedApp />, {\n      state,\n      history: ['/'],\n    });\n\n    expect(getByText('Hello World')).toBeInTheDocument();\n  });\n\n  it('renders the Settings Page', () => {\n    const { getByText } = renderWithRouter(<AuthenticatedApp />, {\n      state,\n      history: ['/settings'],\n    });\n\n    expect(getByText('Account settings')).toBeInTheDocument();\n  });\n\n  it('renders the No match Page', () => {\n    const { getByText } = renderWithRouter(<AuthenticatedApp />, {\n      state,\n      history: ['/no-match'],\n    });\n\n    expect(getByText('404')).toBeInTheDocument();\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/AuthenticatedApp/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/ErrorBoundary/ErrorBoundary.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/ErrorBoundary/ErrorBoundary.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/ErrorBoundary/ErrorBoundary.test.js",["527"],"/* eslint-disable no-console */\nimport React from 'react';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport { render } from 'testUtils';\nimport ErrorBoundary from 'features/app/components/ErrorBoundary';\n\nconst Throw = () => {\n  throw new Error('Dummy error');\n};\n\ndescribe('ErrorBoundary', () => {\n  it('shows the detail of the error on the screen', () => {\n    const originalEnv = process.env.NODE_ENV;\n    process.env.NODE_ENV = 'development';\n    const errorBoundary = (\n      <ErrorBoundary>\n        <Throw />\n      </ErrorBoundary>\n    );\n\n    const spy = jest.spyOn(console, 'error');\n    spy.mockImplementation(() => {});\n    const { queryByText } = render(errorBoundary);\n    console.error.mockRestore();\n\n    expect(queryByText('An error occurred')).toBeInTheDocument();\n    expect(queryByText('Dummy error')).toBeInTheDocument();\n    expect(queryByText('Report error')).toBeInTheDocument();\n\n    process.env.NODE_ENV = originalEnv;\n  });\n\n  it('shows a general message on the screen', () => {\n    const errorBoundary = (\n      <ErrorBoundary>\n        <Throw />\n      </ErrorBoundary>\n    );\n\n    const spy = jest.spyOn(console, 'error');\n    spy.mockImplementation(() => {});\n    const { queryByText } = render(errorBoundary);\n    console.error.mockRestore();\n\n    expect(queryByText('An error occurred')).toBeInTheDocument();\n    expect(queryByText('Dummy error')).toBeNull();\n    expect(queryByText('Report error')).toBeNull();\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/ErrorBoundary/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Footer/Footer.js",["528"],"import React from 'react';\n\nimport LanguageSelector from 'features/app/components/LanguageSelector';\n\nconst Footer = () => (\n  <footer>\n    <LanguageSelector />\n  </footer>\n);\n\nexport default Footer;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Footer/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/Button.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/Form.js",["529"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormProvider } from 'react-hook-form';\n\nimport FormButton from 'features/app/components/Form/Button';\nimport FormInput from 'features/app/components/Form/Input';\nimport FormSelect from 'features/app/components/Form/Select';\n\nimport { Error, FormContent } from 'features/app/components/Form/Form.styles';\n\nconst Form = ({ children, formMethods, onSubmit, ...props }) => {\n  const { errors, handleSubmit } = formMethods;\n\n  return (\n    <FormProvider {...formMethods}>\n      <FormContent {...props} onSubmit={handleSubmit(onSubmit)}>\n        {children}\n      </FormContent>\n      {errors?.general && <Error>{errors.general.message}</Error>}\n    </FormProvider>\n  );\n};\n\nForm.displayName = 'CustomForm';\nForm.Button = FormButton;\nForm.Input = FormInput;\nForm.Select = FormSelect;\n\nForm.propTypes = {\n  children: PropTypes.node.isRequired,\n  formMethods: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/Form.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/Input.js",["530"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useFormContext } from 'react-hook-form';\n\nimport InputLabel from 'features/app/components/Form/InputLabel';\n\nimport { Error, Input, InputContainer } from './Form.styles';\n\nconst FormInput = ({ helpLinkPath, helpMessage, id, name, label, ...rest }) => {\n  const { register, errors } = useFormContext();\n  const error = errors[name];\n\n  return (\n    <InputContainer hasError={Boolean(error)}>\n      <InputLabel\n        helpLinkPath={helpLinkPath}\n        helpMessage={helpMessage}\n        htmlFor={id ?? name}\n        label={label}\n        name={name}\n      />\n      <Input {...rest} id={id ?? name} name={name} ref={register} />\n      <Error>{error?.message}</Error>\n    </InputContainer>\n  );\n};\n\nFormInput.defaultProps = {\n  helpLinkPath: '',\n  helpMessage: '',\n  id: null,\n  label: null,\n  type: 'text',\n};\n\nFormInput.propTypes = {\n  helpLinkPath: PropTypes.string,\n  helpMessage: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n};\n\nexport default FormInput;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/InputLabel.js",["531"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport {\n  HelpLink,\n  Label,\n  LabelContent,\n  Span,\n} from 'features/app/components/Form/Form.styles';\n\nconst InputLabel = ({ helpLinkPath, helpMessage, htmlFor, name, label }) => (\n  <LabelContent>\n    <Label htmlFor={htmlFor}>\n      <Span>{label ?? <FormattedMessage id={`common.${name}`} />}</Span>\n    </Label>\n    {helpLinkPath && <HelpLink to={helpLinkPath}>{helpMessage}</HelpLink>}\n  </LabelContent>\n);\n\nInputLabel.defaultProps = {\n  helpLinkPath: '',\n  helpMessage: '',\n  label: null,\n};\n\nInputLabel.propTypes = {\n  name: PropTypes.string.isRequired,\n  helpLinkPath: PropTypes.string,\n  helpMessage: PropTypes.string,\n  htmlFor: PropTypes.string.isRequired,\n  label: PropTypes.string,\n};\n\nexport default InputLabel;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/Select.js",["532"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { useFormContext } from 'react-hook-form';\n\nimport InputLabel from 'features/app/components/Form/InputLabel';\n\nimport {\n  Error,\n  InputContainer,\n  Select,\n} from 'features/app/components/Form/Form.styles';\n\nconst FormSelect = ({\n  helpLinkPath,\n  helpMessage,\n  id,\n  name,\n  options,\n  label,\n  ...rest\n}) => {\n  const intl = useIntl();\n  const { register, errors } = useFormContext();\n  const error = errors[name];\n\n  return (\n    <InputContainer hasError={Boolean(error)}>\n      <InputLabel\n        helpLinkPath={helpLinkPath}\n        helpMessage={helpMessage}\n        htmlFor={id ?? name}\n        label={label}\n        name={name}\n      />\n      <Select\n        {...rest}\n        id={id ?? name}\n        aria-label={intl.messages[`common.${name}`]}\n        name={name}\n        ref={register}\n      >\n        <option value=\"\">{intl.messages['common.selectOption']}</option>\n        {options.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </Select>\n      <Error>{error?.message}</Error>\n    </InputContainer>\n  );\n};\n\nFormSelect.defaultProps = {\n  helpLinkPath: '',\n  id: null,\n  helpMessage: '',\n  label: null,\n};\n\nFormSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  helpLinkPath: PropTypes.string,\n  id: PropTypes.string,\n  helpMessage: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default FormSelect;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Form/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Home/Home.js",["533"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport queryString from 'query-string';\n\nimport { Content, SuccessText } from 'features/app/components/Home/Home.styles';\n\nconst Home = () => {\n  const { location } = useHistory();\n\n  const resetPasswordSuccess =\n    queryString.parse(location.search)?.resetPassword === 'success';\n\n  return (\n    <Content>\n      {resetPasswordSuccess && (\n        <SuccessText>\n          <FormattedMessage id=\"common.resetPasswordSuccess\" />\n        </SuccessText>\n      )}\n      <h1>Hello World</h1>\n    </Content>\n  );\n};\n\nexport default Home;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Home/Home.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Home/Home.test.js",["534"],"import React from 'react';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport { render } from 'testUtils';\nimport Home from 'features/app/components/Home/index';\n\ntest('shows a \"Hello World\" message', () => {\n  const { queryByText } = render(<Home />);\n  expect(queryByText('Hello World')).toBeInTheDocument();\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Home/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/LanguageSelector/LanguageSelector.js",["535"],"import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport { setGuestLocale } from 'features/auth';\n\nimport { Select } from 'features/app/components/LanguageSelector/LanguageSelector.styles';\n\nconst LanguageSelector = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    dispatch(setGuestLocale(event.target.value));\n  };\n\n  return (\n    <Select\n      aria-label={intl.messages['common.selectLanguage']}\n      name=\"localeSelect\"\n      value={intl.locale}\n      onChange={handleChange}\n    >\n      <option aria-label=\"English\" value=\"en\">\n        English\n      </option>\n      <option aria-label=\"Español\" value=\"es\">\n        Español\n      </option>\n    </Select>\n  );\n};\n\nexport default LanguageSelector;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/LanguageSelector/LanguageSelector.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/LanguageSelector/LanguageSelector.test.js",["536"],"import React from 'react';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport { render } from 'testUtils';\nimport LanguageSelector from 'features/app/components/LanguageSelector/index';\n\ndescribe('LanguageSelector', () => {\n  it('renders the select component with the correct label', () => {\n    const { queryByLabelText } = render(<LanguageSelector />);\n    expect(queryByLabelText('Select language')).toBeInTheDocument();\n  });\n\n  it('displays the correct language options', () => {\n    const { getByLabelText, queryByText } = render(<LanguageSelector />);\n    const selector = getByLabelText('Select language');\n\n    expect(selector.childElementCount).toBe(2);\n    expect(queryByText('Español')).toBeInTheDocument();\n    expect(queryByText('English')).toBeInTheDocument();\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/LanguageSelector/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Loading/Loading.js",["537"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Wrapper,\n  Spinner,\n  DoubleBounce,\n  DoubleBounceWithDelay,\n} from 'features/app/components/Loading/Loading.styles';\n\nconst Loading = ({ styles }) => (\n  <Wrapper styles={styles}>\n    <Spinner>\n      <DoubleBounce />\n      <DoubleBounceWithDelay />\n    </Spinner>\n  </Wrapper>\n);\n\nLoading.defaultProps = {\n  styles: {},\n};\n\nLoading.propTypes = {\n  styles: PropTypes.object,\n};\n\nexport default Loading;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Loading/Loading.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Loading/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/Button.js",["538"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nconst Button = ({ onClick, formattedMessageId }) => (\n  <button data-testid=\"generic-button\" onClick={onClick} type=\"button\">\n    <FormattedMessage id={formattedMessageId} />\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  formattedMessageId: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/Logo.js",["539"],"import React from 'react';\n\nimport {\n  LogoContainer,\n  Brand,\n} from 'features/app/components/Navbar/NavBar.styles';\n\nconst PRODUCT_NAME = 'LoopStudio';\n\nconst Logo = () => (\n  <LogoContainer>\n    <Brand to=\"/\">{PRODUCT_NAME}</Brand>\n  </LogoContainer>\n);\n\nexport default Logo;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/Menu.js",["540","541"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { signOut } from 'features/auth';\nimport Button from 'features/app/components/Navbar/Button';\n\nimport { MenuContainer } from 'features/app/components/Navbar/NavBar.styles';\n\nconst Menu = ({ isAuthenticated }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSignOut = async () => {\n    try {\n      await dispatch(signOut());\n      history.replace('/sign-in');\n    } catch ({ errors }) {\n      console.error(errors);\n    }\n  };\n\n  return (\n    <MenuContainer>\n      {isAuthenticated ? (\n        <>\n          <Button\n            formattedMessageId=\"common.accountSettings\"\n            onClick={() => history.push('/settings')}\n          />\n          <Button formattedMessageId=\"common.signOut\" onClick={handleSignOut} />\n        </>\n      ) : (\n        <>\n          <Button\n            formattedMessageId=\"common.signIn\"\n            onClick={() => history.push('/sign-in')}\n          />\n          <Button\n            formattedMessageId=\"common.signUp\"\n            onClick={() => history.push('/sign-up')}\n          />\n        </>\n      )}\n    </MenuContainer>\n  );\n};\n\nMenu.propTypes = {\n  isAuthenticated: PropTypes.bool,\n};\n\nMenu.defaultProps = {\n  isAuthenticated: false,\n};\n\nexport default Menu;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/NavBar.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/NavBar.test.js",["542"],"import React from 'react';\nimport { render } from 'testUtils';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport Button from 'features/app/components/Navbar/Button';\nimport Logo from 'features/app/components/Navbar/Logo';\nimport Menu from 'features/app/components/Navbar/Menu';\n\ndescribe('Menu', () => {\n  describe('Button', () => {\n    it('renders the proper text', () => {\n      const { queryByText } = render(\n        <Button onClick={() => {}} formattedMessageId=\"common.signIn\" />\n      );\n      expect(queryByText('Sign in')).toBeInTheDocument();\n    });\n  });\n\n  describe('Logo', () => {\n    it('renders the proper text', () => {\n      const { queryByText } = render(<Logo />);\n      expect(queryByText('LoopStudio')).toBeInTheDocument();\n    });\n  });\n\n  it('renders the settings and sign out buttons when authenticated', () => {\n    const { queryByText } = render(<Menu isAuthenticated />);\n    const settingButton = queryByText('Account settings');\n    const signOutButton = queryByText('Sign out');\n    const signUpButton = queryByText('Sign up');\n    const signInButton = queryByText('Sign in');\n\n    expect(settingButton).toBeInTheDocument();\n    expect(signOutButton).toBeInTheDocument();\n    expect(signUpButton).toBeNull();\n    expect(signInButton).toBeNull();\n  });\n\n  it('renders the sign in and sign up buttons when it is not authenticated', () => {\n    const { queryByText } = render(<Menu />);\n    const signUpButton = queryByText('Sign up');\n    const signInButton = queryByText('Sign in');\n    const settingButton = queryByText('Account settings');\n    const signOutButton = queryByText('Sign out');\n\n    expect(signUpButton).toBeInTheDocument();\n    expect(signInButton).toBeInTheDocument();\n    expect(settingButton).toBeNull();\n    expect(signOutButton).toBeNull();\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/Navbar.js",["543"],"import React from 'react';\n\nimport Logo from 'features/app/components/Navbar/Logo';\nimport UserOptions from 'features/app/components/Navbar/UserOptions';\n\nimport { Nav, NavContent } from 'features/app/components/Navbar/NavBar.styles';\n\nconst Navbar = () => (\n  <Nav>\n    <NavContent>\n      <Logo />\n      <UserOptions />\n    </NavContent>\n  </Nav>\n);\n\nexport default Navbar;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/UserOptions.js",["544"],"import React, { useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport md5 from 'md5';\n\nimport { useAuthentication, useUser } from 'features/auth';\n\nimport Button from './Button';\nimport Menu from './Menu';\nimport { useClickAway } from '../../hooks/events';\n\nimport {\n  Avatar,\n  InlineMenu,\n  DesktopDisplay,\n  MobileButton,\n} from './NavBar.styles';\n\nconst RightItem = () => {\n  const user = useUser();\n  const history = useHistory();\n  const isAuthenticated = useAuthentication();\n  const [navOpen, setNavOpen] = useState(false);\n  const emailHash = md5(user?.email || '');\n  const gravatarURL = `https://www.gravatar.com/avatar/${emailHash}`;\n\n  const ref = useRef();\n\n  const handleRedirectTo = (path) => history.push(path);\n\n  const toggleNavMenu = () => setNavOpen((prevState) => !prevState);\n\n  useClickAway(ref, () => {\n    setNavOpen(false);\n  });\n\n  return (\n    <div ref={ref}>\n      {isAuthenticated ? (\n        <Avatar onClick={toggleNavMenu} type=\"button\">\n          <img alt=\"avatar\" src={gravatarURL} />\n        </Avatar>\n      ) : (\n        <>\n          <MobileButton onClick={toggleNavMenu} type=\"button\">\n            <FontAwesomeIcon color=\"#7f9cf5\" icon=\"bars\" size=\"lg\" />\n          </MobileButton>\n          <DesktopDisplay>\n            <InlineMenu>\n              <Button\n                formattedMessageId=\"common.signIn\"\n                onClick={() => handleRedirectTo('/sign-in')}\n              />\n              <Button\n                formattedMessageId=\"common.signUp\"\n                onClick={() => handleRedirectTo('/sign-up')}\n              />\n            </InlineMenu>\n          </DesktopDisplay>\n        </>\n      )}\n      {navOpen && <Menu isAuthenticated={isAuthenticated} />}\n    </div>\n  );\n};\n\nexport default RightItem;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Navbar/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/NoMatch/NoMatch.js",["545"],"import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport {\n  Content,\n  Wrapper,\n  Title,\n  Legend,\n  GoBackHome,\n} from 'features/app/components/NoMatch/NoMatch.styles';\n\nconst NoMatch = () => (\n  <Content>\n    <Wrapper>\n      <Title>\n        <FormattedMessage id=\"common.pageNotFoundTitle\" />\n      </Title>\n      <Legend>\n        <FormattedMessage id=\"common.pageNotFoundLegend\" />\n      </Legend>\n      <GoBackHome to=\"/\">\n        <FormattedMessage id=\"common.goBackHome\" />\n      </GoBackHome>\n    </Wrapper>\n  </Content>\n);\n\nexport default NoMatch;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/NoMatch/NoMatch.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/NoMatch/NoMatch.test.js",["546"],"import React from 'react';\nimport { renderWithRouter } from 'testUtils';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport NoMatch from 'features/app/components/NoMatch/index';\n\ndescribe('NoMatch', () => {\n  test('shows a \"404\" message', () => {\n    const { queryByText } = renderWithRouter(<NoMatch />, {\n      history: ['/non-existent-route'],\n    });\n\n    expect(queryByText('404')).toBeInTheDocument();\n    expect(\n      queryByText('It seems like the page you are looking for doesn’t exist')\n    ).toBeInTheDocument();\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/NoMatch/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Settings/ChangePasswordForm.js",["547"],"import React, { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { object, string } from 'yup';\nimport { useIntl, FormattedMessage } from 'react-intl';\n\nimport Form from 'features/app/components/Form';\nimport { handleErrors } from 'helpers/errors';\nimport AuthService from 'features/auth/services/AuthService';\n\nimport {\n  SuccessText,\n  formStyles,\n  buttonStyles,\n} from 'features/app/components/Settings/Settings.styles';\n\nconst ChangePasswordForm = () => {\n  const intl = useIntl();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isResponseSuccess, setIsResponseSuccess] = useState(false);\n\n  const validationSchema = object().shape({\n    password: string()\n      .required(intl.messages['common.required'])\n      .min(8, intl.messages['common.shortPassword']),\n    currentPassword: string().required(intl.messages['common.required']),\n  });\n\n  const formMethods = useForm({ resolver: yupResolver(validationSchema) });\n\n  const onSubmit = async ({ password, currentPassword }) => {\n    setIsLoading(true);\n    try {\n      await AuthService.updateUser({ password }, currentPassword);\n      setIsResponseSuccess(true);\n      formMethods.reset(\n        { currentPassword: '', password: '' },\n        { errors: true }\n      );\n    } catch (error) {\n      setIsResponseSuccess(false);\n      handleErrors(error, formMethods.setError);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Form formMethods={formMethods} onSubmit={onSubmit} styles={formStyles}>\n      <Form.Input\n        label={intl.messages['common.currentPassword']}\n        name=\"currentPassword\"\n        type=\"password\"\n      />\n      <Form.Input\n        label={intl.messages['common.newPassword']}\n        name=\"password\"\n        type=\"password\"\n      />\n      <Form.Button\n        isLoading={isLoading}\n        styles={buttonStyles}\n        text={intl.messages['common.updatePassword']}\n      />\n      {isResponseSuccess && (\n        <SuccessText>\n          <FormattedMessage id=\"common.changePasswordSuccess\" />\n        </SuccessText>\n      )}\n    </Form>\n  );\n};\n\nexport default ChangePasswordForm;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Settings/Form.js",["548"],"import React, { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { object, string } from 'yup';\n\nimport Form from 'features/app/components/Form';\nimport { handleErrors } from 'helpers/errors';\nimport { useUser, updateUser } from 'features/auth';\n\nimport {\n  SuccessText,\n  formStyles,\n  buttonStyles,\n} from 'features/app/components/Settings/Settings.styles';\n\nconst SettingsForm = () => {\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const user = useUser();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isResponseSuccess, setIsResponseSuccess] = useState(false);\n\n  const defaultValues = {\n    firstName: user.firstName,\n    lastName: user.lastName,\n    locale: user.locale,\n  };\n\n  const validationSchema = object().shape({\n    firstName: string().required(intl.messages['common.required']),\n    lastName: string().required(intl.messages['common.required']),\n    locale: string().nullable().required(intl.messages['common.required']),\n  });\n\n  const formMethods = useForm({\n    defaultValues,\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = async (attributes) => {\n    setIsLoading(true);\n    try {\n      await dispatch(updateUser(attributes));\n      setIsResponseSuccess(true);\n    } catch (error) {\n      handleErrors(error, formMethods.setError);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Form formMethods={formMethods} onSubmit={onSubmit} styles={formStyles}>\n      <Form.Input name=\"firstName\" />\n      <Form.Input name=\"lastName\" />\n      <Form.Select\n        name=\"locale\"\n        options={[\n          { value: 'en', label: 'English' },\n          { value: 'es', label: 'Español' },\n        ]}\n      />\n      <Form.Button\n        isLoading={isLoading}\n        styles={buttonStyles}\n        text={intl.messages['common.updateSettings']}\n      />\n      {isResponseSuccess && (\n        <SuccessText>\n          <FormattedMessage id=\"common.updateSettingsSuccess\" />\n        </SuccessText>\n      )}\n    </Form>\n  );\n};\n\nexport default SettingsForm;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Settings/Settings.js",["549"],"import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Form from 'features/app/components/Settings/Form';\nimport ChangePasswordForm from 'features/app/components/Settings/ChangePasswordForm';\n\nimport {\n  SettingsContainer,\n  SettingsTitle,\n  Wrapper,\n} from 'features/app/components/Settings/Settings.styles';\n\nconst Settings = () => {\n  return (\n    <SettingsContainer>\n      <Wrapper>\n        <SettingsTitle>\n          <FormattedMessage id=\"common.accountSettings\" />\n        </SettingsTitle>\n        <Form />\n        <ChangePasswordForm />\n      </Wrapper>\n    </SettingsContainer>\n  );\n};\n\nexport default Settings;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Settings/Settings.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Settings/Settings.test.js",["550"],"import React from 'react';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport { fillInput, fireEvent, render, waitFor } from 'testUtils';\nimport {\n  mockUpdateUserSuccess,\n  mockUpdateUserFailure,\n} from 'testUtils/mocks/auth';\nimport Settings from 'features/app/components/Settings/index';\n\nconst fakeSettingsData = {\n  firstName: 'John',\n  lastName: 'Smith',\n  locale: 'es',\n};\n\nconst fakePasswordData = {\n  user: {\n    password: 'password1234',\n  },\n  passwordCheck: 'oldPass',\n};\n\nconst fakeState = {\n  auth: {\n    user: {\n      id: 1,\n      firstName: 'Jane',\n      lastName: 'Doe',\n      email: 'jane.doe@example.com',\n      locale: 'en',\n      createdAt: '2020-04-21T21:20:35.663-04:00',\n      updatedAt: '2020-04-21T22:22:56.291-04:00',\n    },\n    session: {\n      uid: 'jane.doe@example.com',\n      client: 'client',\n      accessToken: 'token',\n    },\n    guestLocale: 'en',\n  },\n};\n\ndescribe('Settings', () => {\n  it('confirms when account settings were changed successfully', async () => {\n    const mockedRequest = mockUpdateUserSuccess(fakeSettingsData);\n\n    const { getByLabelText, getByRole, getByText } = render(<Settings />, {\n      state: fakeState,\n    });\n\n    const firstName = getByLabelText('First Name');\n    const lastName = getByLabelText('Last Name');\n    const locale = getByLabelText('Language');\n    const submitButton = getByRole('button', { name: 'Update Settings' });\n\n    fillInput(firstName, fakeSettingsData.firstName);\n    fillInput(lastName, fakeSettingsData.lastName);\n    fillInput(locale, fakeSettingsData.locale);\n\n    fireEvent.click(submitButton);\n\n    await waitFor(() => {\n      expect(mockedRequest.isDone()).toBeTruthy();\n      expect(\n        getByText('Your settings have been updated successfully')\n      ).toBeInTheDocument();\n    });\n  });\n\n  it('renders API errors when changing account settings', async () => {\n    const mockedRequest = mockUpdateUserFailure(fakeSettingsData);\n\n    const { getByLabelText, getByRole, getByText } = render(<Settings />, {\n      state: fakeState,\n    });\n    const firstName = getByLabelText('First Name');\n    const lastName = getByLabelText('Last Name');\n    const locale = getByLabelText('Language');\n    const submitButton = getByRole('button', { name: 'Update Settings' });\n\n    fillInput(firstName, fakeSettingsData.firstName);\n    fillInput(lastName, fakeSettingsData.lastName);\n    fillInput(locale, fakeSettingsData.locale);\n\n    fireEvent.click(submitButton);\n\n    await waitFor(() => {\n      expect(mockedRequest.isDone()).toBeTruthy();\n      expect(getByText('Some scary error')).toBeInTheDocument();\n    });\n  });\n\n  it('requires the first name when changing account settings', async () => {\n    const { getByLabelText, getByRole, findByText } = render(<Settings />, {\n      state: fakeState,\n    });\n    const firstName = getByLabelText('First Name');\n    const submitButton = getByRole('button', { name: 'Update Settings' });\n\n    fillInput(firstName, '');\n\n    fireEvent.click(submitButton);\n\n    const firstNameError = await findByText('Required');\n\n    expect(firstNameError).toBeInTheDocument();\n  });\n\n  it('confirms when the password was changed successfully', async () => {\n    const mockedRequest = mockUpdateUserSuccess(\n      fakePasswordData.user,\n      fakePasswordData.passwordCheck\n    );\n\n    const { getByLabelText, getByRole, getByText } = render(<Settings />, {\n      state: fakeState,\n    });\n\n    const currentPasswordInput = getByLabelText('Current Password');\n    const newPasswordInput = getByLabelText('New Password');\n    const submitButton = getByRole('button', { name: 'Update Password' });\n\n    fillInput(currentPasswordInput, fakePasswordData.passwordCheck);\n    fillInput(newPasswordInput, fakePasswordData.user.password);\n\n    fireEvent.click(submitButton);\n\n    await waitFor(() => {\n      expect(mockedRequest.isDone()).toBeTruthy();\n      expect(\n        getByText('Your password has been changed successfully')\n      ).toBeInTheDocument();\n    });\n  });\n\n  it('renders API errors when changing the password', async () => {\n    const mockedRequest = mockUpdateUserFailure(\n      fakePasswordData.user,\n      fakePasswordData.passwordCheck\n    );\n\n    const { getByLabelText, getByRole, getByText } = render(<Settings />, {\n      state: fakeState,\n    });\n\n    const currentPasswordInput = getByLabelText('Current Password');\n    const newPasswordInput = getByLabelText('New Password');\n    const submitButton = getByRole('button', { name: 'Update Password' });\n\n    fillInput(currentPasswordInput, fakePasswordData.passwordCheck);\n    fillInput(newPasswordInput, fakePasswordData.user.password);\n\n    fireEvent.click(submitButton);\n\n    await waitFor(() => {\n      expect(mockedRequest.isDone()).toBeTruthy();\n      expect(getByText('Some scary error')).toBeInTheDocument();\n    });\n  });\n\n  it('requires a new password when changing the password', async () => {\n    const { getByLabelText, getByRole, findByText } = render(<Settings />, {\n      state: fakeState,\n    });\n\n    const currentPasswordInput = getByLabelText('Current Password');\n    const newPasswordInput = getByLabelText('New Password');\n    const submitButton = getByRole('button', { name: 'Update Password' });\n\n    fillInput(currentPasswordInput, '');\n    fillInput(newPasswordInput, fakePasswordData.user.password);\n\n    fireEvent.click(submitButton);\n\n    const currentPasswordError = await findByText('Required');\n\n    expect(currentPasswordError).toBeInTheDocument();\n  });\n\n  it('requires the new password when changing the password', async () => {\n    const { getByLabelText, getByRole, findByText } = render(<Settings />, {\n      state: fakeState,\n    });\n\n    const currentPasswordInput = getByLabelText('Current Password');\n    const newPasswordInput = getByLabelText('New Password');\n    const submitButton = getByRole('button', { name: 'Update Password' });\n\n    fillInput(currentPasswordInput, fakePasswordData.passwordCheck);\n    fillInput(newPasswordInput, '');\n\n    fireEvent.click(submitButton);\n\n    const newPasswordError = await findByText('Required');\n\n    expect(newPasswordError).toBeInTheDocument();\n  });\n\n  it('requires the current password to be at least 8 chars', async () => {\n    const { getByLabelText, getByRole, findByText } = render(<Settings />, {\n      state: fakeState,\n    });\n\n    const currentPasswordInput = getByLabelText('Current Password');\n    const newPasswordInput = getByLabelText('New Password');\n    const submitButton = getByRole('button', { name: 'Update Password' });\n\n    fillInput(currentPasswordInput, fakePasswordData.passwordCheck);\n    fillInput(newPasswordInput, 'pass');\n\n    fireEvent.click(submitButton);\n\n    const newPasswordError = await findByText(\n      'Password too short, minimum length is 8 characters'\n    );\n\n    expect(newPasswordError).toBeInTheDocument();\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/Settings/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/components/UnauthenticatedApp/UnauthenticatedApp.js",["551"],"import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { ForgotPasswordPage, SignInPage, SignUpPage } from 'features/auth';\n\nconst UnauthenticatedApp = () => (\n  <Switch>\n    <Route path=\"/sign-in\">\n      <SignInPage />\n    </Route>\n    <Route path=\"/sign-up\">\n      <SignUpPage />\n    </Route>\n    <Route path=\"/forgot-password\" exact>\n      <ForgotPasswordPage />\n    </Route>\n    <Redirect to=\"/sign-in\" />\n  </Switch>\n);\n\nexport default UnauthenticatedApp;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/UnauthenticatedApp/UnauthenticatedApp.test.js",["552"],"import React from 'react';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport { renderWithRouter } from 'testUtils';\nimport UnauthenticatedApp from 'features/app/components/UnauthenticatedApp/index';\n\ndescribe('Unauthenticated App', () => {\n  it('renders the Sign in Page', () => {\n    const { getByTestId } = renderWithRouter(<UnauthenticatedApp />, {\n      history: ['/sign-in'],\n    });\n\n    expect(getByTestId('signin-form')).toBeInTheDocument();\n  });\n\n  it('renders the Sign up Page', () => {\n    const { getByTestId } = renderWithRouter(<UnauthenticatedApp />, {\n      history: ['/sign-up'],\n    });\n\n    expect(getByTestId('signup-form')).toBeInTheDocument();\n  });\n\n  it('renders the Forgot Password Page', () => {\n    const { getByTestId } = renderWithRouter(<UnauthenticatedApp />, {\n      history: ['/forgot-password'],\n    });\n\n    expect(getByTestId('forgot-password-email-form')).toBeInTheDocument();\n  });\n\n  it('redirects to the Sign in Page when an unknown route is used', () => {\n    const { history } = renderWithRouter(<UnauthenticatedApp />, {\n      history: ['/no-match'],\n    });\n\n    expect(history.location.pathname).toBe('/sign-in');\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/components/UnauthenticatedApp/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/hooks/events.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/hooks/locale.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/layouts/MainLayout/MainLayout.js",["553"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Navbar from 'features/app/components/Navbar';\n\nimport { MainContainer } from 'features/app/layouts/MainLayout/MainLayout.styles';\n\nconst MainLayout = ({ children, noHeader }) => (\n  <>\n    {!noHeader && <Navbar />}\n    <MainContainer noHeader={noHeader}>{children}</MainContainer>\n  </>\n);\n\nMainLayout.propTypes = {\n  children: PropTypes.element.isRequired,\n  noHeader: PropTypes.bool,\n};\n\nMainLayout.defaultProps = {\n  noHeader: false,\n};\n\nexport default MainLayout;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/layouts/MainLayout/MainLayout.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/layouts/MainLayout/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/locales/entries/en-US.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/locales/entries/es-ES.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/locales/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/app/locales/messages/en-US.js",["554"],"export default {\n  common: {\n    accountSettings: 'Account settings',\n    alreadyHaveAnAccount: 'Already have an account?',\n    changePasswordSuccess: 'Your password has been changed successfully',\n    confirm: 'Submit',\n    confirmPassword: 'Confirm password',\n    createAccount: 'Create one here',\n    currentPassword: 'Current Password',\n    dontHaveAccountQuestion: 'Don’t have an account?',\n    email: 'Email',\n    errorBoundaryMessage: 'An error occurred',\n    errorMessage: 'There was an error',\n    firstName: 'First Name',\n    forgotPassword: 'Forgot password?',\n    forgotPasswordChange: 'Step 3: Enter your new password',\n    forgotPasswordEmailResend: 'Didn’t get a code?',\n    forgotPasswordEmailSent:\n      'Step 2: Enter the verification code we just sent to your email address',\n    forgotPasswordLegend:\n      'Step 1: Enter your email and we’ll help you reset your password',\n    goBackHome: 'Go back home',\n    invalidEmail: 'Invalid email',\n    lastName: 'Last Name',\n    lengthToken: 'Must have six digits',\n    locale: 'Language',\n    newPassword: 'New Password',\n    next: 'Next',\n    pageNotFoundLegend:\n      'It seems like the page you are looking for doesn’t exist',\n    pageNotFoundTitle: '404',\n    password: 'Password',\n    passwordsDontMatch: 'The passwords don’t match',\n    reportError: 'Report error',\n    required: 'Required',\n    resetPassword: 'Reset Password',\n    resetPasswordSuccess: 'Your password has been updated succesfully',\n    selectLanguage: 'Select language',\n    selectOption: 'Select an option',\n    shortPassword: 'Password too short, minimum length is 8 characters',\n    signIn: 'Sign in',\n    signOut: 'Sign out',\n    signUp: 'Sign up',\n    token: 'Code',\n    updatePassword: 'Update Password',\n    updateSettings: 'Update Settings',\n    updateSettingsSuccess: 'Your settings have been updated successfully',\n  },\n};\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/locales/messages/es-ES.js",["555"],"export default {\n  common: {\n    accountSettings: 'Ajustes de cuenta',\n    alreadyHaveAnAccount: '¿Ya tienes una cuenta?',\n    changePasswordSuccess: 'Tu contraseña ha sido cambiada con éxito',\n    confirm: 'Confirmar',\n    confirmPassword: 'Confirmar contraseña',\n    createAccount: 'Crea una aquí',\n    currentPassword: 'Contraseña Actual',\n    dontHaveAccountQuestion: '¿No tienes cuenta?',\n    email: 'Correo',\n    errorBoundaryMessage: 'Ha ocurrido un error',\n    errorMessage: 'Ha ocurrido un error',\n    firstName: 'Nombre',\n    forgotPassword: '¿Olvidaste tu contraseña?',\n    forgotPasswordChange: 'Paso 3: Ingresa tu nueva contraseña',\n    forgotPasswordEmailResend: '¿No recibiste un código?',\n    forgotPasswordEmailSent:\n      'Paso 2: Ingresa el código de verificacion que hemos enviado a tu correo',\n    forgotPasswordLegend:\n      'Paso 1: Ingresa tu correo y te ayudaremos a recuperar tu contraseña',\n    goBackHome: 'Volver al inicio',\n    invalidEmail: 'Email inválido',\n    lastName: 'Apellido',\n    lengthToken: 'Debe tener seis dígitos',\n    locale: 'Idioma',\n    newPassword: 'Nueva Contraseña',\n    next: 'Siguiente',\n    pageNotFoundLegend: 'Parece que la página que estás buscando no existe',\n    pageNotFoundTitle: '404',\n    password: 'Contraseña',\n    passwordsDontMatch: 'Las contraseñas no coinciden',\n    reportError: 'Reportar error',\n    required: 'Obligatorio',\n    resetPassword: 'Recuperar Contraseña',\n    resetPasswordSuccess: 'Tu contraseña se ha actualizado con éxito',\n    selectLanguage: 'Seleccionar idioma',\n    selectOption: 'Seleccionar una opción',\n    shortPassword:\n      'Contraseña demasiado corta, el largo mínimo es de 8 caracteres',\n    signIn: 'Iniciar Sesión',\n    signOut: 'Cerrar Sesión',\n    signUp: 'Crear Cuenta',\n    token: 'Código',\n    updatePassword: 'Actualizar Contraseña',\n    updateSettings: 'Actualizar Ajustes',\n    updateSettingsSuccess: 'Tus ajustes han sido actualizados con éxito',\n  },\n};\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/pages/HomePage.js",["556"],"import React from 'react';\n\nimport Home from 'features/app/components/Home';\nimport MainLayout from 'features/app/layouts/MainLayout';\n\nconst HomePage = () => (\n  <MainLayout>\n    <Home />\n  </MainLayout>\n);\n\nexport default HomePage;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/pages/NoMatchPage.js",["557"],"import React from 'react';\n\nimport NoMatch from 'features/app/components/NoMatch';\nimport MainLayout from 'features/app/layouts/MainLayout';\n\nconst NoMatchPage = () => (\n  <MainLayout noHeader>\n    <NoMatch />\n  </MainLayout>\n);\n\nexport default NoMatchPage;\n","/Users/moira/Projects/react-app-boilerplate/src/features/app/pages/SettingsPage.js",["558"],"import React from 'react';\n\nimport Settings from 'features/app/components/Settings';\nimport MainLayout from 'features/app/layouts/MainLayout';\n\nconst SettingsPage = () => (\n  <MainLayout>\n    <Settings />\n  </MainLayout>\n);\n\nexport default SettingsPage;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/actions.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/AuthWrapper/AuthWrapper.js",["559"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  AuthContainer,\n  AuthTitle,\n  LegendContainer,\n  Screen,\n  ViewContainer,\n} from 'features/auth/components/AuthWrapper/AuthWrapper.styles';\n\nconst AuthWrapper = ({ title, children, renderLegend }) => (\n  <Screen>\n    <ViewContainer>\n      <AuthContainer>\n        <AuthTitle data-testid=\"authentication-title\">{title}</AuthTitle>\n        {children}\n      </AuthContainer>\n      {renderLegend && <LegendContainer>{renderLegend()}</LegendContainer>}\n    </ViewContainer>\n  </Screen>\n);\n\nAuthWrapper.defaultProps = {\n  title: '',\n  renderLegend: () => {},\n};\n\nAuthWrapper.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.object.isRequired,\n  renderLegend: PropTypes.func,\n};\n\nexport default AuthWrapper;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/AuthWrapper/AuthWrapper.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/AuthWrapper/AuthWrapper.test.js",["560"],"import React from 'react';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport { render } from 'testUtils';\nimport AuthWrapper from 'features/auth/components/AuthWrapper/index';\n\ndescribe('AuthWrapper', () => {\n  it('shows a \"Hello World\" message on the title', () => {\n    const testedNode = (\n      <AuthWrapper title=\"Hello World\">\n        <div />\n      </AuthWrapper>\n    );\n\n    const { getByTestId } = render(testedNode);\n    const title = getByTestId('authentication-title');\n\n    expect(title).toHaveTextContent('Hello World');\n  });\n\n  it('renders the children properly', () => {\n    const testedNode = (\n      <AuthWrapper title=\"Hello World\">\n        <div>Child Node</div>\n      </AuthWrapper>\n    );\n\n    const { queryByText } = render(testedNode);\n    expect(queryByText('Child Node')).toBeInTheDocument();\n  });\n\n  it('renders the legend properly', () => {\n    const legendNode = <p>Legend Node</p>;\n\n    const testedNode = (\n      <AuthWrapper title=\"Hello World\" renderLegend={() => legendNode}>\n        <div />\n      </AuthWrapper>\n    );\n\n    const { queryByText } = render(testedNode);\n    expect(queryByText('Legend Node')).toBeInTheDocument();\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/AuthWrapper/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/EmailForm.js",["561"],"import React, { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { object, string } from 'yup';\nimport PropTypes from 'prop-types';\n\nimport Form from 'features/app/components/Form';\nimport Loading from 'features/app/components/Loading';\nimport { handleErrors } from 'helpers/errors';\nimport AuthService from 'features/auth/services/AuthService';\nimport { RESET_PASSWORD_STEPS } from 'features/auth/components/ForgotPassword/ForgotPassword';\n\nimport {\n  inputStyles,\n  Legend,\n} from 'features/auth/components/ForgotPassword/ForgotPassword.styles';\n\nconst EmailForm = ({ onStepChange }) => {\n  const [loading, setLoading] = useState(false);\n  const intl = useIntl();\n\n  const validationSchema = object().shape({\n    email: string()\n      .required(intl.messages['common.required'])\n      .email(intl.messages['common.invalidEmail']),\n  });\n\n  const formMethods = useForm({ resolver: yupResolver(validationSchema) });\n\n  const onSubmit = async ({ email }) => {\n    setLoading(true);\n\n    try {\n      await AuthService.getVerificationCode(email);\n      onStepChange(RESET_PASSWORD_STEPS.emailSent);\n    } catch (errors) {\n      handleErrors(errors, formMethods.setError);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Form\n      data-testid=\"forgot-password-email-form\"\n      onSubmit={onSubmit}\n      formMethods={formMethods}\n    >\n      <Legend>\n        <FormattedMessage id=\"common.forgotPasswordLegend\" />\n      </Legend>\n      <Form.Input styles={inputStyles} name=\"email\" type=\"email\" />\n      <Form.Button text={intl.messages['common.resetPassword']} />\n      {loading && <Loading />}\n    </Form>\n  );\n};\n\nEmailForm.propTypes = {\n  onStepChange: PropTypes.func.isRequired,\n};\n\nexport default EmailForm;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/ForgotPassword.js",["562"],"import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport AuthWrapper from 'features/auth/components/AuthWrapper';\nimport EmailForm from 'features/auth/components/ForgotPassword/EmailForm';\nimport PasswordForm from 'features/auth/components/ForgotPassword/PasswordForm';\nimport TokenForm from 'features/auth/components/ForgotPassword/TokenForm';\n\nexport const RESET_PASSWORD_STEPS = {\n  initial: 0,\n  emailSent: 1,\n  updatePassword: 2,\n};\n\nconst ForgotPassword = () => {\n  const intl = useIntl();\n  const [resetStep, setResetStep] = useState(RESET_PASSWORD_STEPS.initial);\n  const [token, setToken] = useState();\n\n  const handleStepChange = (step) => setResetStep(step);\n\n  const handleSaveToken = (newToken) => setToken(newToken);\n\n  return (\n    <AuthWrapper title={intl.messages['common.resetPassword']}>\n      <>\n        {resetStep === RESET_PASSWORD_STEPS.initial && (\n          <EmailForm onStepChange={handleStepChange} />\n        )}\n        {resetStep === RESET_PASSWORD_STEPS.emailSent && (\n          <TokenForm\n            onSaveToken={handleSaveToken}\n            onStepChange={handleStepChange}\n          />\n        )}\n        {resetStep === RESET_PASSWORD_STEPS.updatePassword && (\n          <PasswordForm token={token} />\n        )}\n      </>\n    </AuthWrapper>\n  );\n};\n\nexport default ForgotPassword;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/ForgotPassword.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/ForgotPassword.test.js",["563"],"import React from 'react';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport {\n  fillInput,\n  fireEvent,\n  render,\n  renderWithRouter,\n  waitFor,\n} from 'testUtils';\nimport {\n  mockGetVerificationCodeSuccess,\n  mockGetVerificationCodeFailure,\n  mockVerifyTokenSuccess,\n  mockVerifyTokenFailure,\n  mockResetPasswordSuccess,\n  mockResetPasswordFailure,\n} from 'testUtils/mocks/auth';\nimport ForgotPassword from './index';\n\nconst fakeEmail = 'user@example.com';\nconst fakeVerificationCode = '123456';\nconst password = 'password';\n\ndescribe('ForgotPassword', () => {\n  it('submits correctly', async () => {\n    const {\n      getByLabelText,\n      getByRole,\n      getByText,\n      history,\n    } = renderWithRouter(<ForgotPassword />, { history: ['/forgot-password'] });\n\n    const mockGetVerificationCode = mockGetVerificationCodeSuccess(fakeEmail);\n\n    const emailInput = getByLabelText('Email');\n    const resetButton = getByRole('button', { name: 'Reset Password' });\n\n    fillInput(emailInput, fakeEmail);\n\n    fireEvent.click(resetButton);\n\n    await waitFor(() => {\n      expect(mockGetVerificationCode.isDone()).toBeTruthy();\n      expect(\n        getByText(\n          'Step 2: Enter the verification code we just sent to your email address'\n        )\n      ).toBeInTheDocument();\n    });\n\n    const mockVerifyToken = mockVerifyTokenSuccess(fakeVerificationCode);\n    const code = getByLabelText('Code');\n    const nextButton = getByRole('button', { name: 'Next' });\n\n    fillInput(code, fakeVerificationCode);\n\n    fireEvent.click(nextButton);\n\n    await waitFor(() => {\n      expect(mockVerifyToken.isDone()).toBeTruthy();\n      expect(getByText('Step 3: Enter your new password')).toBeInTheDocument();\n    });\n\n    const mockResetPassword = mockResetPasswordSuccess(\n      password,\n      fakeVerificationCode\n    );\n\n    const passwordInput = getByLabelText('Password');\n    const confirmPasswordInput = getByLabelText('Confirm password');\n\n    const submitButton = getByRole('button', { name: 'Next' });\n\n    fillInput(passwordInput, password);\n    fillInput(confirmPasswordInput, password);\n\n    fireEvent.click(submitButton);\n\n    await waitFor(() => {\n      expect(mockResetPassword.isDone()).toBeTruthy();\n      expect(history.location.pathname).toEqual('/');\n    });\n  });\n\n  it('shows errors for invalid values', async () => {\n    const { getByLabelText, getByRole, getByText } = render(<ForgotPassword />);\n\n    const email = getByLabelText('Email');\n    const submitButton = getByRole('button', { name: 'Reset Password' });\n\n    fillInput(email, 'invalid');\n\n    fireEvent.click(submitButton);\n\n    await waitFor(() => {\n      expect(getByText('Invalid email')).toBeInTheDocument();\n    });\n  });\n\n  it('shows error on email form response failure', async () => {\n    const { getByLabelText, getByRole, getByText } = render(<ForgotPassword />);\n\n    const mockedRequest = mockGetVerificationCodeFailure(fakeEmail);\n\n    const email = getByLabelText('Email');\n    const submitButton = getByRole('button', { name: 'Reset Password' });\n\n    fillInput(email, fakeEmail);\n\n    fireEvent.click(submitButton);\n\n    await waitFor(() => {\n      expect(mockedRequest.isDone()).toBeTruthy();\n      expect(\n        getByText(`Unable to find user with email ${fakeEmail}`)\n      ).toBeInTheDocument();\n    });\n  });\n\n  it('shows error on token form response failure', async () => {\n    const { getByLabelText, getByRole, getByText } = render(<ForgotPassword />);\n    const mockGetVerificationCode = mockGetVerificationCodeSuccess(fakeEmail);\n\n    const emailInput = getByLabelText('Email');\n    const resetButton = getByRole('button', { name: 'Reset Password' });\n\n    fillInput(emailInput, fakeEmail);\n\n    fireEvent.click(resetButton);\n\n    await waitFor(() => {\n      expect(mockGetVerificationCode.isDone()).toBeTruthy();\n      expect(\n        getByText(\n          'Step 2: Enter the verification code we just sent to your email address'\n        )\n      ).toBeInTheDocument();\n    });\n\n    const mockVerifyToken = mockVerifyTokenFailure(fakeVerificationCode);\n    const code = getByLabelText('Code');\n    const nextButton = getByRole('button', { name: 'Next' });\n\n    fillInput(code, fakeVerificationCode);\n\n    fireEvent.click(nextButton);\n\n    await waitFor(() => {\n      expect(mockVerifyToken.isDone()).toBeTruthy();\n      expect(\n        getByText('The reset password token is invalid')\n      ).toBeInTheDocument();\n    });\n  });\n\n  it('shows error on password form response failure', async () => {\n    const { getByLabelText, getByRole, getByText } = render(<ForgotPassword />);\n\n    const mockGetVerificationCode = mockGetVerificationCodeSuccess(fakeEmail);\n\n    const emailInput = getByLabelText('Email');\n    const resetButton = getByRole('button', { name: 'Reset Password' });\n\n    fillInput(emailInput, fakeEmail);\n\n    fireEvent.click(resetButton);\n\n    await waitFor(() => {\n      expect(mockGetVerificationCode.isDone()).toBeTruthy();\n      expect(\n        getByText(\n          'Step 2: Enter the verification code we just sent to your email address'\n        )\n      ).toBeInTheDocument();\n    });\n\n    const mockVerifyToken = mockVerifyTokenSuccess(fakeVerificationCode);\n\n    const code = getByLabelText('Code');\n    const nextButton = getByRole('button', { name: 'Next' });\n\n    fillInput(code, fakeVerificationCode);\n\n    fireEvent.click(nextButton);\n\n    await waitFor(() => {\n      expect(mockVerifyToken.isDone()).toBeTruthy();\n      expect(getByText('Step 3: Enter your new password')).toBeInTheDocument();\n    });\n\n    const mockResetPassword = mockResetPasswordFailure(\n      password,\n      fakeVerificationCode\n    );\n\n    const passwordInput = getByLabelText('Password');\n    const confirmPasswordInput = getByLabelText('Confirm password');\n\n    const submitButton = getByRole('button', { name: 'Next' });\n\n    fillInput(passwordInput, password);\n    fillInput(confirmPasswordInput, password);\n\n    fireEvent.click(submitButton);\n\n    await waitFor(() => {\n      expect(mockResetPassword.isDone()).toBeTruthy();\n      expect(getByText('Connection error')).toBeInTheDocument();\n    });\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/PasswordForm.js",["564"],"import React, { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { object, ref, string } from 'yup';\nimport PropTypes from 'prop-types';\n\nimport { resetPassword } from 'features/auth';\nimport Form from 'features/app/components/Form';\nimport Loading from 'features/app/components/Loading';\nimport { handleErrors } from 'helpers/errors';\n\nimport {\n  Legend,\n  inputStyles,\n} from 'features/auth/components/ForgotPassword/ForgotPassword.styles';\n\nconst PasswordForm = ({ token }) => {\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const intl = useIntl();\n\n  const validationSchema = object().shape({\n    password: string().required(intl.messages['common.required']),\n    confirmPassword: string().oneOf(\n      [ref('password'), null],\n      intl.messages['common.passwordsDontMatch']\n    ),\n  });\n\n  const formMethods = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = async ({ password }) => {\n    setLoading(true);\n\n    try {\n      await dispatch(resetPassword({ password, token }));\n      history.push({\n        pathname: '/',\n        search: '?resetPassword=success',\n      });\n    } catch (errors) {\n      handleErrors(errors, formMethods.setError);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Form\n      data-testid=\"forgot-password-password-form\"\n      onSubmit={onSubmit}\n      formMethods={formMethods}\n    >\n      <Legend>\n        <FormattedMessage id=\"common.forgotPasswordChange\" />\n      </Legend>\n      <Form.Input styles={inputStyles} name=\"password\" type=\"password\" />\n      <Form.Input styles={inputStyles} name=\"confirmPassword\" type=\"password\" />\n      <Form.Button text={intl.messages['common.next']} />\n      {loading && <Loading />}\n    </Form>\n  );\n};\n\nPasswordForm.propTypes = {\n  token: PropTypes.string.isRequired,\n};\n\nexport default PasswordForm;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/TokenForm.js",["565"],"import React, { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { object, string } from 'yup';\nimport PropTypes from 'prop-types';\n\nimport Form from 'features/app/components/Form';\nimport Loading from 'features/app/components/Loading';\nimport { handleErrors } from 'helpers/errors';\nimport AuthService from 'features/auth/services/AuthService';\nimport { RESET_PASSWORD_STEPS } from 'features/auth/components/ForgotPassword/ForgotPassword';\n\nimport {\n  Legend,\n  inputStyles,\n  LinkButton,\n} from 'features/auth/components/ForgotPassword/ForgotPassword.styles';\n\nconst TokenForm = ({ onStepChange, onSaveToken }) => {\n  const [loading, setLoading] = useState(false);\n  const intl = useIntl();\n\n  const validationSchema = object().shape({\n    token: string()\n      .length(6, intl.messages['common.lengthToken'])\n      .required(intl.messages['common.required']),\n  });\n\n  const formMethods = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = async ({ token }) => {\n    setLoading(true);\n\n    try {\n      await AuthService.verifyToken(token);\n      onSaveToken(token);\n      onStepChange(RESET_PASSWORD_STEPS.updatePassword);\n    } catch (error) {\n      handleErrors(error, formMethods.setError);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Form\n      data-testid=\"forgot-password-token-form\"\n      onSubmit={onSubmit}\n      formMethods={formMethods}\n    >\n      <Legend>\n        <FormattedMessage id=\"common.forgotPasswordEmailSent\" />\n      </Legend>\n      <Form.Input styles={inputStyles} name=\"token\" type=\"number\" />\n      <LinkButton\n        type=\"button\"\n        onClick={() => onStepChange(RESET_PASSWORD_STEPS.initial)}\n      >\n        <FormattedMessage id=\"common.forgotPasswordEmailResend\" />\n      </LinkButton>\n      <Form.Button text={intl.messages['common.next']} />\n      {loading && <Loading />}\n    </Form>\n  );\n};\n\nTokenForm.propTypes = {\n  onStepChange: PropTypes.func.isRequired,\n  onSaveToken: PropTypes.func.isRequired,\n};\n\nexport default TokenForm;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/ForgotPassword/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignIn/Form.js",["566"],"/* eslint-disable jsx-a11y/tabindex-no-positive */\nimport React, { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { object, string } from 'yup';\n\nimport { signIn } from 'features/auth';\nimport Form from 'features/app/components/Form';\nimport { handleErrors } from 'helpers/errors';\n\nconst SignInForm = () => {\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const validationSchema = object().shape({\n    email: string()\n      .email(intl.messages['common.invalidEmail'])\n      .required(intl.messages['common.required']),\n    password: string().required(intl.messages['common.required']),\n  });\n\n  const formMethods = useForm({ resolver: yupResolver(validationSchema) });\n\n  const onSubmit = async (values) => {\n    setIsLoading(true);\n    try {\n      await dispatch(signIn(values));\n      history.replace('/');\n    } catch (error) {\n      setIsLoading(false);\n      handleErrors(error, formMethods.setError);\n    }\n  };\n\n  return (\n    <Form\n      data-testid=\"signin-form\"\n      formMethods={formMethods}\n      onSubmit={onSubmit}\n    >\n      <Form.Input name=\"email\" tabIndex=\"1\" type=\"email\" />\n      <Form.Input\n        helpLinkPath=\"/forgot-password\"\n        helpMessage={intl.messages['common.forgotPassword']}\n        name=\"password\"\n        tabIndex=\"2\"\n        type=\"password\"\n      />\n      <Form.Button\n        isLoading={isLoading}\n        text={intl.messages['common.signIn']}\n      />\n    </Form>\n  );\n};\n\nexport default SignInForm;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignIn/SignIn.js",["567"],"import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport AuthWrapper from 'features/auth/components/AuthWrapper';\nimport {\n  Legend,\n  NavigationLink,\n} from 'features/auth/components/AuthWrapper/AuthWrapper.styles';\nimport Form from 'features/auth/components/SignIn/Form';\n\nconst SignIn = () => {\n  const intl = useIntl();\n\n  return (\n    <AuthWrapper\n      renderLegend={() => (\n        <>\n          <Legend>\n            <FormattedMessage id=\"common.dontHaveAccountQuestion\" />\n          </Legend>\n          <NavigationLink to=\"/sign-up\">\n            <FormattedMessage id=\"common.signUp\" />\n          </NavigationLink>\n        </>\n      )}\n      title={intl.messages['common.signIn']}\n    >\n      <Form />\n    </AuthWrapper>\n  );\n};\n\nexport default SignIn;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignIn/SignIn.test.js",["568"],"import React from 'react';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport {\n  fillInput,\n  fireEvent,\n  render,\n  renderWithRouter,\n  waitFor,\n} from 'testUtils';\nimport { mockSignInSuccess, mockSignInFailure } from 'testUtils/mocks/auth';\nimport SignIn from 'features/auth/components/SignIn/index';\n\nconst fakeCredentials = {\n  email: 'user@example.com',\n  password: 'password',\n};\n\ndescribe('SignIn', () => {\n  it('should submit correctly', async () => {\n    const mockedRequest = mockSignInSuccess(fakeCredentials);\n\n    const { getByLabelText, getByRole, history } = renderWithRouter(\n      <SignIn />,\n      { history: ['/sign-in'] }\n    );\n    const submitButton = getByRole('button');\n    const email = getByLabelText('Email');\n    const password = getByLabelText('Password');\n\n    fillInput(email, fakeCredentials.email);\n    fillInput(password, fakeCredentials.password);\n\n    fireEvent.click(submitButton);\n\n    await waitFor(() => {\n      expect(mockedRequest.isDone()).toBeTruthy();\n      expect(history.location.pathname).toBe('/');\n    });\n  });\n\n  it('should show error on response failure', async () => {\n    const mockedRequest = mockSignInFailure(fakeCredentials);\n\n    const { getByLabelText, getByRole, getByText } = render(<SignIn />);\n    const submitButton = getByRole('button');\n    const email = getByLabelText('Email');\n    const password = getByLabelText('Password');\n\n    fillInput(email, fakeCredentials.email);\n    fillInput(password, fakeCredentials.password);\n\n    fireEvent.click(submitButton);\n\n    await waitFor(() => {\n      expect(mockedRequest.isDone()).toBeTruthy();\n      expect(getByText('The credentials are not valid')).toBeInTheDocument();\n    });\n  });\n\n  it('should show errors for invalid values', async () => {\n    const { getByLabelText, getByRole, findByText } = render(<SignIn />);\n    const submitButton = getByRole('button');\n    const email = getByLabelText('Email');\n\n    fillInput(email, 'invalid');\n\n    fireEvent.click(submitButton);\n\n    const emailError = await findByText('Invalid email');\n    const passwordError = await findByText('Required');\n\n    expect(emailError).toBeInTheDocument();\n    expect(passwordError).toBeInTheDocument();\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignIn/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignUp/Form.js",["569"],"import React, { useState } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useIntl } from 'react-intl';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { object, string } from 'yup';\n\nimport { signUp } from 'features/auth';\nimport Form from 'features/app/components/Form';\nimport { handleErrors } from 'helpers/errors';\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n  const intl = useIntl();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const validationSchema = object().shape({\n    email: string()\n      .required(intl.messages['common.required'])\n      .email(intl.messages['common.invalidEmail']),\n    firstName: string().required(intl.messages['common.required']),\n    lastName: string().required(intl.messages['common.required']),\n    password: string()\n      .required(intl.messages['common.required'])\n      .min(8, intl.messages['common.shortPassword']),\n  });\n\n  const formMethods = useForm({ resolver: yupResolver(validationSchema) });\n\n  const onSubmit = async (values) => {\n    setIsLoading(true);\n    try {\n      await dispatch(signUp({ locale: intl.locale, ...values }));\n      history.replace('/');\n    } catch (error) {\n      setIsLoading(false);\n      handleErrors(error, formMethods.setError);\n    }\n  };\n\n  return (\n    <Form\n      data-testid=\"signup-form\"\n      onSubmit={onSubmit}\n      formMethods={formMethods}\n    >\n      <Form.Input name=\"email\" type=\"email\" />\n      <Form.Input name=\"firstName\" />\n      <Form.Input name=\"lastName\" />\n      <Form.Input name=\"password\" type=\"password\" />\n      <Form.Button\n        isLoading={isLoading}\n        text={intl.messages['common.signUp']}\n      />\n    </Form>\n  );\n};\n\nexport default SignUpForm;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignUp/SignUp.js",["570"],"import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport AuthWrapper from 'features/auth/components/AuthWrapper';\nimport {\n  Legend,\n  NavigationLink,\n} from 'features/auth/components/AuthWrapper/AuthWrapper.styles';\nimport Form from 'features/auth/components/SignUp/Form';\n\nconst SignUp = () => {\n  const intl = useIntl();\n\n  return (\n    <AuthWrapper\n      renderLegend={() => (\n        <>\n          <Legend>\n            <FormattedMessage id=\"common.alreadyHaveAnAccount\" />\n          </Legend>\n          <NavigationLink to=\"/sign-in\">\n            <FormattedMessage id=\"common.signIn\" />\n          </NavigationLink>\n        </>\n      )}\n      title={intl.messages['common.signUp']}\n    >\n      <Form />\n    </AuthWrapper>\n  );\n};\n\nexport default SignUp;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignUp/SignUp.test.js",["571"],"import React from 'react';\nimport '@testing-library/jest-dom/extend-expect';\n\nimport {\n  fillInput,\n  fireEvent,\n  render,\n  renderWithRouter,\n  waitFor,\n} from 'testUtils';\nimport { mockSignUpSuccess, mockSignUpFailure } from 'testUtils/mocks/auth';\nimport SignUp from 'features/auth/components/SignUp/index';\n\nconst fakeUser = {\n  email: 'user@example.com',\n  firstName: 'User',\n  lastName: 'Example',\n  password: 'password',\n  locale: 'en',\n};\n\ndescribe('SignUp', () => {\n  it('should submit correctly', async () => {\n    const mockedRequest = mockSignUpSuccess(fakeUser);\n\n    const { getByLabelText, getByRole, history } = renderWithRouter(\n      <SignUp />,\n      { history: ['/sign-up'] }\n    );\n\n    const email = getByLabelText('Email');\n    const firstName = getByLabelText('First Name');\n    const lastName = getByLabelText('Last Name');\n    const password = getByLabelText('Password');\n    const submitButton = getByRole('button');\n\n    fillInput(email, fakeUser.email);\n    fillInput(firstName, fakeUser.firstName);\n    fillInput(lastName, fakeUser.lastName);\n    fillInput(password, fakeUser.password);\n\n    fireEvent.click(submitButton);\n\n    await waitFor(() => {\n      expect(mockedRequest.isDone()).toBeTruthy();\n      expect(history.location.pathname).toBe('/');\n    });\n  });\n\n  it('should show error on response failure', async () => {\n    const mockedRequest = mockSignUpFailure(fakeUser);\n\n    const { getByLabelText, getByRole, getByText } = render(<SignUp />);\n    const email = getByLabelText('Email');\n    const firstName = getByLabelText('First Name');\n    const lastName = getByLabelText('Last Name');\n    const password = getByLabelText('Password');\n    const submitButton = getByRole('button');\n\n    fillInput(email, fakeUser.email);\n    fillInput(firstName, fakeUser.firstName);\n    fillInput(lastName, fakeUser.lastName);\n    fillInput(password, fakeUser.password);\n\n    fireEvent.click(submitButton);\n\n    await waitFor(() => {\n      expect(mockedRequest.isDone()).toBeTruthy();\n      expect(getByText('Has already been taken')).toBeInTheDocument();\n    });\n  });\n\n  it('should show errors for invalid values', async () => {\n    const { getByLabelText, getByRole, findByText } = render(<SignUp />);\n    const email = getByLabelText('Email');\n    const password = getByLabelText('Password');\n    const submitButton = getByRole('button');\n\n    fillInput(email, 'invalid');\n    fillInput(password, 'invalid');\n\n    fireEvent.click(submitButton);\n\n    const emailError = await findByText('Invalid email');\n    const passwordError = await findByText(\n      'Password too short, minimum length is 8 characters'\n    );\n\n    expect(emailError).toBeInTheDocument();\n    expect(passwordError).toBeInTheDocument();\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/components/SignUp/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/hooks/auth.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/layouts/AuthLayout/AuthLayout.js",["572"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Navbar from 'features/app/components/Navbar';\nimport Footer from 'features/app/components/Footer';\n\nimport { AuthContainer } from './AuthLayout.styles';\n\nconst AuthLayout = ({ children, noHeader }) => (\n  <>\n    {!noHeader && <Navbar />}\n    <AuthContainer noHeader={noHeader}>{children}</AuthContainer>\n    <Footer />\n  </>\n);\n\nAuthLayout.propTypes = {\n  children: PropTypes.element.isRequired,\n  noHeader: PropTypes.bool,\n};\n\nAuthLayout.defaultProps = {\n  noHeader: false,\n};\n\nexport default AuthLayout;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/layouts/AuthLayout/AuthLayout.styles.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/layouts/AuthLayout/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/pages/ForgotPasswordPage.js",["573"],"import React from 'react';\n\nimport MainLayout from 'features/app/layouts/MainLayout';\nimport ForgotPassword from '../components/ForgotPassword';\n\nconst ForgotPasswordPage = () => (\n  <MainLayout>\n    <ForgotPassword />\n  </MainLayout>\n);\n\nexport default ForgotPasswordPage;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/pages/SignInPage.js",["574"],"import React from 'react';\n\nimport SignIn from '../components/SignIn';\nimport AuthLayout from '../layouts/AuthLayout';\n\nconst SignInPage = () => (\n  <AuthLayout noHeader>\n    <SignIn />\n  </AuthLayout>\n);\n\nexport default SignInPage;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/pages/SignUpPage.js",["575"],"import React from 'react';\n\nimport SignUp from '../components/SignUp';\nimport AuthLayout from '../layouts/AuthLayout';\n\nconst SignUpPage = () => (\n  <AuthLayout noHeader>\n    <SignUp />\n  </AuthLayout>\n);\n\nexport default SignUpPage;\n","/Users/moira/Projects/react-app-boilerplate/src/features/auth/pages/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/reducer.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/services/AuthService.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/services/httpClient.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/services/middlewares/auth.js",[],"/Users/moira/Projects/react-app-boilerplate/src/features/auth/types.js",["576"],"const authTypes = {\n  CLEAR_SESSION: 'CLEAR_SESSION',\n  RESET_PASSWORD: 'RESET_PASSWORD',\n  SET_GUEST_LOCALE: 'SET_GUEST_LOCALE',\n  SIGN_IN: 'SIGN_IN',\n  SIGN_OUT: 'SIGN_OUT',\n  SIGN_UP: 'SIGN_UP',\n  UPDATE_USER: 'UPDATE_USER',\n};\n\nexport default {\n  ...authTypes,\n};\n","/Users/moira/Projects/react-app-boilerplate/src/helpers/decamelize.js",[],"/Users/moira/Projects/react-app-boilerplate/src/helpers/decamelize.test.js",[],"/Users/moira/Projects/react-app-boilerplate/src/helpers/errors.js",[],"/Users/moira/Projects/react-app-boilerplate/src/helpers/string.js",[],"/Users/moira/Projects/react-app-boilerplate/src/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/index.test.js",["577"],"import React, { StrictMode } from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { ThemeProvider } from '@emotion/react';\n\nimport App from 'features/app/components/App';\nimport configureStore from 'store';\nimport httpClient, {\n  applyMiddlewares,\n} from 'features/auth/services/httpClient';\nimport theme from 'theme';\n\nconst { store, persistor } = configureStore();\napplyMiddlewares(httpClient, store);\n\njest.mock('react-dom', () => ({ render: jest.fn() }));\n\ndescribe('index.js', () => {\n  it('renders without crashing', () => {\n    const root = document.createElement('div');\n    root.id = 'root';\n    document.body.appendChild(root);\n\n    // eslint-disable-next-line global-require\n    require('./index.js');\n\n    render(\n      <StrictMode>\n        <Provider store={store}>\n          <PersistGate persistor={persistor}>\n            <ThemeProvider theme={theme}>\n              <App />\n            </ThemeProvider>\n          </PersistGate>\n        </Provider>\n      </StrictMode>,\n      root\n    );\n  });\n});\n","/Users/moira/Projects/react-app-boilerplate/src/setupTests.js",[],"/Users/moira/Projects/react-app-boilerplate/src/store/createReducer.js",["578"],"/* eslint-disable import/no-named-as-default */\nimport produce from 'immer';\n\nexport default (initialState, handlers) => {\n  return (state = initialState, { type, payload }) => {\n    return produce(state, (draft) => {\n      const handler = handlers[type];\n      return handler ? handler(draft, payload) : state;\n    });\n  };\n};\n","/Users/moira/Projects/react-app-boilerplate/src/store/index.js",[],"/Users/moira/Projects/react-app-boilerplate/src/store/rootReducer.js",[],"/Users/moira/Projects/react-app-boilerplate/src/testUtils/fieldHelpers.js",[],"/Users/moira/Projects/react-app-boilerplate/src/testUtils/index.js",["579"],"import React from 'react';\nimport flatten from 'flat';\nimport PropTypes from 'prop-types';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { render } from '@testing-library/react';\nimport { createMemoryHistory } from 'history';\nimport { ThemeProvider } from '@emotion/react';\nimport theme from 'theme';\n\nimport AppLocale from 'features/app/locales';\nimport configureStore from 'store';\nimport httpClient, {\n  applyMiddlewares,\n} from 'features/auth/services/httpClient';\n\nconst renderWithProviders = (\n  ui,\n  { state = {}, history = createMemoryHistory(), ...options } = {}\n) => {\n  const { store } = configureStore({ initialState: state, persist: false });\n  applyMiddlewares(httpClient, store);\n\n  const Wrapper = ({ children }) => (\n    <Provider store={store}>\n      <IntlProvider locale=\"en\" messages={flatten(AppLocale.en.messages)}>\n        <ThemeProvider theme={theme}>\n          <Router history={history}>{children}</Router>\n        </ThemeProvider>\n      </IntlProvider>\n    </Provider>\n  );\n\n  Wrapper.propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n\n  return render(ui, { wrapper: Wrapper, ...options });\n};\n\nfunction renderWithRouter(ui, { history, ...options }) {\n  const historyData = createMemoryHistory({ initialEntries: history });\n\n  return {\n    ...renderWithProviders(ui, { history: historyData, ...options }),\n    history: historyData,\n  };\n}\n\n// re-export everything\nexport * from '@testing-library/react';\nexport * from 'testUtils/fieldHelpers';\n\n// override render method\nexport { renderWithProviders as render, renderWithRouter };\n","/Users/moira/Projects/react-app-boilerplate/src/testUtils/mocks/auth.js",[],"/Users/moira/Projects/react-app-boilerplate/src/testUtils/mocks/base.js",[],"/Users/moira/Projects/react-app-boilerplate/src/theme.js",[],{"ruleId":"580","severity":1,"message":"581","line":3,"column":1,"nodeType":"582","endLine":3,"endColumn":25},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":2,"column":8,"nodeType":"585","messageId":"586","endLine":2,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"587","severity":1,"message":"588","line":20,"column":7,"nodeType":"589","messageId":"590","endLine":20,"endColumn":20},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"580","severity":1,"message":"591","line":1,"column":1,"nodeType":"582","endLine":49,"endColumn":3},{"ruleId":"580","severity":1,"message":"591","line":1,"column":1,"nodeType":"582","endLine":49,"endColumn":3},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":2,"column":8,"nodeType":"585","messageId":"586","endLine":2,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"580","severity":1,"message":"591","line":11,"column":1,"nodeType":"582","endLine":13,"endColumn":3},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},{"ruleId":"580","severity":1,"message":"592","line":4,"column":1,"nodeType":"582","endLine":11,"endColumn":3},{"ruleId":"583","severity":1,"message":"584","line":1,"column":8,"nodeType":"585","messageId":"586","endLine":1,"endColumn":13},"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected","Assign object to a variable before exporting as module default","Assign arrow function to a variable before exporting as module default"]